# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ragdoll.models.base_model_ import Model
from ragdoll.models.git_log_message import GitLogMessage
from ragdoll import util


class ConfBaseInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, file_path: str=None, expected_contents: str=None, change_log: List[GitLogMessage]=None):  # noqa: E501
        """ConfBaseInfo - a model defined in Swagger

        :param file_path: The file_path of this ConfBaseInfo.  # noqa: E501
        :type file_path: str
        :param expected_contents: The expected_contents of this ConfBaseInfo.  # noqa: E501
        :type expected_contents: str
        :param change_log: The change_log of this ConfBaseInfo.  # noqa: E501
        :type change_log: List[GitLogMessage]
        """
        self.swagger_types = {
            'file_path': str,
            'expected_contents': str,
            'change_log': List[GitLogMessage]
        }

        self.attribute_map = {
            'file_path': 'filePath',
            'expected_contents': 'expectedContents',
            'change_log': 'changeLog'
        }

        self._file_path = file_path
        self._expected_contents = expected_contents
        self._change_log = change_log

    @classmethod
    def from_dict(cls, dikt) -> 'ConfBaseInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ConfBaseInfo of this ConfBaseInfo.  # noqa: E501
        :rtype: ConfBaseInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_path(self) -> str:
        """Gets the file_path of this ConfBaseInfo.

        the path of a configuration file  # noqa: E501

        :return: The file_path of this ConfBaseInfo.
        :rtype: str
        """
        return self._file_path

    @file_path.setter
    def file_path(self, file_path: str):
        """Sets the file_path of this ConfBaseInfo.

        the path of a configuration file  # noqa: E501

        :param file_path: The file_path of this ConfBaseInfo.
        :type file_path: str
        """

        self._file_path = file_path

    @property
    def expected_contents(self) -> str:
        """Gets the expected_contents of this ConfBaseInfo.

        expected configuration value of configuration item  # noqa: E501

        :return: The expected_contents of this ConfBaseInfo.
        :rtype: str
        """
        return self._expected_contents

    @expected_contents.setter
    def expected_contents(self, expected_contents: str):
        """Sets the expected_contents of this ConfBaseInfo.

        expected configuration value of configuration item  # noqa: E501

        :param expected_contents: The expected_contents of this ConfBaseInfo.
        :type expected_contents: str
        """

        self._expected_contents = expected_contents

    @property
    def change_log(self) -> List[GitLogMessage]:
        """Gets the change_log of this ConfBaseInfo.


        :return: The change_log of this ConfBaseInfo.
        :rtype: List[GitLogMessage]
        """
        return self._change_log

    @change_log.setter
    def change_log(self, change_log: List[GitLogMessage]):
        """Sets the change_log of this ConfBaseInfo.


        :param change_log: The change_log of this ConfBaseInfo.
        :type change_log: List[GitLogMessage]
        """

        self._change_log = change_log
