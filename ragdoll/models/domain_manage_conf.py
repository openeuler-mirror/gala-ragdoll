# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ragdoll.models.base_model_ import Model
from ragdoll import util
from ragdoll.models.manage_conf import ManageConf


class DomainManageConf(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, domain_name: str=None, manage_confs: List[ManageConf]=None):  # noqa: E501
        """DomainManageConf - a model defined in Swagger

        :param domain_name: The domain_name of this DomainManageConf.  # noqa: E501
        :type domain_name: str
        :param manage_confs: The manage_confs of this DomainManageConf.  # noqa: E501
        :type manage_confs: List[ManageConf]
        """
        self.swagger_types = {
            'domain_name': str,
            'manage_confs': List[ManageConf]
        }

        self.attribute_map = {
            'domain_name': 'domainName',
            'manage_confs': 'manageConfs'
        }

        self._domain_name = domain_name
        self._manage_confs = manage_confs

    @classmethod
    def from_dict(cls, dikt) -> 'DomainManageConf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DomainManageConf of this DomainManageConf.  # noqa: E501
        :rtype: DomainManageConf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain_name(self) -> str:
        """Gets the domain_name of this DomainManageConf.

        domain name  # noqa: E501

        :return: The domain_name of this DomainManageConf.
        :rtype: str
        """
        return self._domain_name

    @domain_name.setter
    def domain_name(self, domain_name: str):
        """Sets the domain_name of this DomainManageConf.

        domain name  # noqa: E501

        :param domain_name: The domain_name of this DomainManageConf.
        :type domain_name: str
        """

        self._domain_name = domain_name

    @property
    def manage_confs(self) -> List[ManageConf]:
        """Gets the manage_confs of this DomainManageConf.


        :return: The manage_confs of this DomainManageConf.
        :rtype: List[ManageConf]
        """
        return self._manage_confs

    @manage_confs.setter
    def manage_confs(self, manage_confs: List[ManageConf]):
        """Sets the manage_confs of this DomainManageConf.


        :param manage_confs: The manage_confs of this DomainManageConf.
        :type manage_confs: List[ManageConf]
        """

        self._manage_confs = manage_confs
