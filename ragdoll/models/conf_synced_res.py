# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ragdoll.models.base_model_ import Model
from ragdoll import util


class ConfSyncedRes(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, file_path, result):  # noqa: E501
        """ConfSyncedRes - a model defined in Swagger

        :param file_path: The file_path of this ConfSyncedRes.  # noqa: E501
        :type file_path: str
        :param result: The result of this ConfSyncedRes.  # noqa: E501
        :type result: str
        """
        self.swagger_types = {
            'file_path': str,
            'result': str
        }

        self.attribute_map = {
            'file_path': 'filePath',
            'result': 'result'
        }

        self._file_path = file_path
        self._result = result

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ConfSyncedRes of this ConfSyncedRes.  # noqa: E501
        :rtype: ConfSyncedRes
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_path(self):
        """Gets the file_path of this ConfSyncedRes.


        :return: The file_path of this ConfSyncedRes.
        :rtype: str
        """
        return self._file_path

    @file_path.setter
    def file_path(self, file_path):
        """Sets the file_path of this ConfSyncedRes.


        :param file_path: The file_path of this ConfSyncedRes.
        :type file_path: str
        """

        self._file_path = file_path

    @property
    def result(self):
        """Gets the result of this ConfSyncedRes.

        the result of host  # noqa: E501

        :return: The result of this ConfSyncedRes.
        :rtype: str
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this ConfSyncedRes.

        the result of host  # noqa: E501

        :param result: The result of this ConfSyncedRes.
        :type result: str
        """
        allowed_values = ["SUCCESS", "FAILED"]  # noqa: E501
        if result not in allowed_values:
            raise ValueError(
                "Invalid value for `result` ({0}), must be one of {1}"
                .format(result, allowed_values)
            )

        self._result = result
