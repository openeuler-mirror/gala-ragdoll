# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ragdoll.models.base_model_ import Model
from ragdoll import util


class GitLogMessage(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, _date: datetime=None, author: str=None, change_id: str=None, change_reason: str=None, pre_value: str=None, post_value: str=None):  # noqa: E501
        """GitLogMessage - a model defined in Swagger

        :param _date: The _date of this GitLogMessage.  # noqa: E501
        :type _date: datetime
        :param author: The author of this GitLogMessage.  # noqa: E501
        :type author: str
        :param change_id: The change_id of this GitLogMessage.  # noqa: E501
        :type change_id: str
        :param change_reason: The change_reason of this GitLogMessage.  # noqa: E501
        :type change_reason: str
        :param pre_value: The pre_value of this GitLogMessage.  # noqa: E501
        :type pre_value: str
        :param post_value: The post_value of this GitLogMessage.  # noqa: E501
        :type post_value: str
        """
        self.swagger_types = {
            '_date': datetime,
            'author': str,
            'change_id': str,
            'change_reason': str,
            'pre_value': str,
            'post_value': str
        }

        self.attribute_map = {
            '_date': 'date',
            'author': 'author',
            'change_id': 'changeId',
            'change_reason': 'changeReason',
            'pre_value': 'preValue',
            'post_value': 'postValue'
        }

        self.__date = _date
        self._author = author
        self._change_id = change_id
        self._change_reason = change_reason
        self._pre_value = pre_value
        self._post_value = post_value

    @classmethod
    def from_dict(cls, dikt) -> 'GitLogMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GitLogMessage of this GitLogMessage.  # noqa: E501
        :rtype: GitLogMessage
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _date(self) -> datetime:
        """Gets the _date of this GitLogMessage.


        :return: The _date of this GitLogMessage.
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date: datetime):
        """Sets the _date of this GitLogMessage.


        :param _date: The _date of this GitLogMessage.
        :type _date: datetime
        """

        self.__date = _date

    @property
    def author(self) -> str:
        """Gets the author of this GitLogMessage.


        :return: The author of this GitLogMessage.
        :rtype: str
        """
        return self._author

    @author.setter
    def author(self, author: str):
        """Sets the author of this GitLogMessage.


        :param author: The author of this GitLogMessage.
        :type author: str
        """

        self._author = author

    @property
    def change_id(self) -> str:
        """Gets the change_id of this GitLogMessage.


        :return: The change_id of this GitLogMessage.
        :rtype: str
        """
        return self._change_id

    @change_id.setter
    def change_id(self, change_id: str):
        """Sets the change_id of this GitLogMessage.


        :param change_id: The change_id of this GitLogMessage.
        :type change_id: str
        """

        self._change_id = change_id

    @property
    def change_reason(self) -> str:
        """Gets the change_reason of this GitLogMessage.


        :return: The change_reason of this GitLogMessage.
        :rtype: str
        """
        return self._change_reason

    @change_reason.setter
    def change_reason(self, change_reason: str):
        """Sets the change_reason of this GitLogMessage.


        :param change_reason: The change_reason of this GitLogMessage.
        :type change_reason: str
        """

        self._change_reason = change_reason

    @property
    def pre_value(self) -> str:
        """Gets the pre_value of this GitLogMessage.


        :return: The pre_value of this GitLogMessage.
        :rtype: str
        """
        return self._pre_value

    @pre_value.setter
    def pre_value(self, pre_value: str):
        """Sets the pre_value of this GitLogMessage.


        :param pre_value: The pre_value of this GitLogMessage.
        :type pre_value: str
        """

        self._pre_value = pre_value

    @property
    def post_value(self) -> str:
        """Gets the post_value of this GitLogMessage.


        :return: The post_value of this GitLogMessage.
        :rtype: str
        """
        return self._post_value

    @post_value.setter
    def post_value(self, post_value: str):
        """Sets the post_value of this GitLogMessage.


        :param post_value: The post_value of this GitLogMessage.
        :type post_value: str
        """

        self._post_value = post_value
