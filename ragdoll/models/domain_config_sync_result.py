#!/usr/bin/python3
# ******************************************************************************
# Copyright (c) Huawei Technologies Co., Ltd. 2021-2022. All rights reserved.
# licensed under the Mulan PSL v2.
# You can use this software according to the terms and conditions of the Mulan PSL v2.
# You may obtain a copy of Mulan PSL v2 at:
#     http://license.coscl.org.cn/MulanPSL2
# THIS SOFTWARE IS PROVIDED ON AN 'AS IS' BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR FIT FOR A PARTICULAR
# PURPOSE.
# See the Mulan PSL v2 for more details.
# ******************************************************************************/
"""
@FileName: domain_config_sync_result.py
@Time: 2024/1/25 11:31
@Author: JiaoSiMao
Description:
"""
# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401
from typing import List, Dict  # noqa: F401
from ragdoll.models.base_model_ import Model
from ragdoll import util


class DomainConfigSyncResult(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, host_id: int = None, domain_name: str = None, sync_status: int = None):  # noqa: E501
        """DomainConfigSyncResult - a model defined in Swagger

        :param host_id: The host_id of this HostSyncResult.  # noqa: E501
        :type host_id: int
        :param domain_name: The domain_name of this DomainConfigSyncResult.  # noqa: E501
        :type domain_name: str
        :param sync_status: The sync_status of this DomainConfigSyncResult.  # noqa: E501
        :type sync_status: int
        """
        self.swagger_types = {
            'host_id': int,
            'domain_name': str,
            'sync_status': int
        }

        self.attribute_map = {
            'host_id': 'hostId',
            'domain_name': 'domainName',
            'sync_status': 'syncStatus'
        }

        self._host_id = host_id
        self._domain_name = domain_name
        self._sync_status = sync_status

    @classmethod
    def from_dict(cls, dikt) -> 'DomainConfigSyncResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DomainConfigSyncResult of this DomainConfigSyncResult.  # noqa: E501
        :rtype: DomainConfigSyncResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host_id(self) -> int:
        """Gets the host_id of this DomainConfigSyncResult.

        the id of host  # noqa: E501

        :return: The host_id of this DomainConfigSyncResult.
        :rtype: int
        """
        return self._host_id

    @host_id.setter
    def host_id(self, host_id: int):
        """Sets the host_id of this DomainConfigSyncResult.

        the id of host  # noqa: E501

        :param host_id: The host_id of this DomainConfigSyncResult.
        :type host_id: str
        """

        self._host_id = host_id

    @property
    def domain_name(self) -> str:
        """Gets the domain_name of this DomainConfigSyncResult.

        :return: The domain_name of this DomainConfigSyncResult.
        :rtype: str
        """
        return self._domain_name

    @domain_name.setter
    def domain_name(self, domain_name: str):
        """Sets the domain_name of this DomainConfigSyncResult.

        :param domain_name: The domain_name of this DomainConfigSyncResult.
        :type domain_name: str
        """

        self._domain_name = domain_name

    @property
    def sync_status(self) -> int:
        """Gets the sync_status of this DomainConfigSyncResult.

        :return: The sync_status of this DomainConfigSyncResult.
        :rtype: int
        """
        return self._sync_status

    @sync_status.setter
    def sync_status(self, sync_status: int):
        """Sets the sync_status of this DomainConfigSyncResult.


        :param sync_status: The sync_status of this DomainConfigSyncResult.
        :type sync_status: str
        """

        self._sync_status = sync_status
