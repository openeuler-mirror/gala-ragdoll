# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ragdoll.models.base_model_ import Model
from ragdoll import util


class RealConf(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, path: str=None, real_value: str=None):  # noqa: E501
        """RealConf - a model defined in Swagger

        :param path: The path of a configuration item.  # noqa: E501
        :type path: str
        :param real_value: The real conf of a configuration item.  # noqa: E501
        :type real_value: str
        """
        self.swagger_types = {
            'path': str,
            'real_value': str
        }

        self.attribute_map = {
            'path': 'path',
            'real_value': 'realValue'
        }

        self._path = path
        self._real_value = real_value

    @classmethod
    def from_dict(cls, dikt) -> 'RealConf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RealConf of this RealConf.  # noqa: E501
        :rtype: RealConf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def path(self) -> str:
        """Gets the path of a configuration item.

        the path of host  # noqa: E501

        :return: The path of a configuration item.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path: str):
        """Sets the path of a configuration item.

        the the path of a configuration item.  # noqa: E501

        :param path: The path of a configuration item.
        :type path: str
        """
        self._path = path

    @property
    def real_value(self) -> str:
        """Gets the real value of a configuration item.

        the real value of a configuration item  # noqa: E501

        :return: The real_value of this Host.
        :rtype: str
        """
        return self._real_value

    @real_value.setter
    def real_value(self, real_value: str):
        """Sets the ip of this Host.

        the real value address of host  # noqa: E501

        :param real_value: The real_value of this Host.
        :type real_value: str
        """

        self._real_value = real_value
